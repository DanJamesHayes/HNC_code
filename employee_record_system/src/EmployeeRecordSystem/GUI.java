/*
 * GUI
 * 
 * Version 1.0
 *
 * Created by Daniel Hayes 10/03/2018
 *
 * Creative Commons Fair Use
 */
package EmployeeRecordSystem;

import java.awt.Image;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Creates a GUI to show, create and delete employee records
 * @author Daniel Hayes
 * @version 1.0
 * @since 0.5
 */
public class GUI extends javax.swing.JFrame {
    
    /**
     * Creates new form UI
     */
    public GUI() {
        super("Employee Record System");
        initComponents();
        workforce=new Store(20);
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtNin = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtJobTitle = new javax.swing.JTextField();
        buttonClear = new javax.swing.JButton();
        comboGender = new javax.swing.JComboBox<>();
        buttonAddRecord = new javax.swing.JButton();
        txtSalary = new javax.swing.JTextField();
        comboDobDay = new javax.swing.JComboBox<>();
        comboDobMonth = new javax.swing.JComboBox<>();
        comboDobYear = new javax.swing.JComboBox<>();
        comboStartMonth = new javax.swing.JComboBox<>();
        comboStartYear = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        comboStartDay = new javax.swing.JComboBox<>();
        lblImage = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        menuLoadFile = new javax.swing.JMenuItem();
        menuSaveFile = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        menuNextRecord = new javax.swing.JMenuItem();
        menuDeleteRecord = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name:");

        jLabel2.setText("Date of Birth:");

        jLabel3.setText("Gender:");

        jLabel4.setText("Salary:");

        jLabel5.setText("National Insurance No:");

        jLabel6.setText("Phone No:");

        jLabel7.setText("Start Date:");

        buttonClear.setText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Male", "Female" }));

        buttonAddRecord.setText("Add/Edit Record");
        buttonAddRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddRecordActionPerformed(evt);
            }
        });

        txtSalary.setText("0.0");

        comboDobDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        comboDobMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        comboDobYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940" }));

        comboStartMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        comboStartYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940" }));

        jLabel9.setText("Job Title:");

        comboStartDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonAddRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPhone)
                            .addComponent(txtNin, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtName)
                            .addComponent(txtSalary, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(comboStartDay, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboStartYear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(comboGender, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboDobDay, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboDobMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboDobYear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtJobTitle))
                        .addContainerGap(36, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboDobDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(comboDobMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboDobYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboStartYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(comboStartDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJobTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonClear)
                    .addComponent(buttonAddRecord))
                .addGap(11, 11, 11))
        );

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        fileMenu.setText("File");

        menuLoadFile.setText("Load File");
        menuLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLoadFileActionPerformed(evt);
            }
        });
        fileMenu.add(menuLoadFile);

        menuSaveFile.setText("Save File");
        menuSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveFileActionPerformed(evt);
            }
        });
        fileMenu.add(menuSaveFile);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");

        menuNextRecord.setText("Next Record");
        menuNextRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNextRecordActionPerformed(evt);
            }
        });
        editMenu.add(menuNextRecord);

        menuDeleteRecord.setText("Delete Record");
        menuDeleteRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteRecordActionPerformed(evt);
            }
        });
        editMenu.add(menuDeleteRecord);

        jMenuBar1.add(editMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * A method to clear the employee details in the GUI
     * @param evt an action event when the clear button is pressed
     */
    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        txtName.setText("");
        comboGender.setSelectedIndex(0);
        comboDobDay.setSelectedIndex(0);
        comboDobMonth.setSelectedIndex(0);
        comboDobYear.setSelectedIndex(0);
        txtSalary.setText("0.0");
        txtNin.setText("");
        txtPhone.setText("");
        comboStartDay.setSelectedIndex(0);
        comboStartMonth.setSelectedIndex(0);
        comboStartYear.setSelectedIndex(0);
        txtJobTitle.setText("");
    }//GEN-LAST:event_buttonClearActionPerformed

    /**
     * A method to save the current store of employees to file
     * @param evt an action event when the save file option is clicked
     */
    private void menuSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveFileActionPerformed
        
        File file = new File("workforceFile.txt");
        int index = workforce.getIndex();
        
        try {
            // Deletes the file if it alread exits before creating a new one
            if (file.exists()) {
                file.delete();
                file.createNewFile();
            } else {
                file.createNewFile();
            }
            
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            
            for (int i=0; i<index; i++) {
                pw.println(workforce.getEmployee(i).toString());
            }
            
            pw.close();
            bw.close();
            fw.close();
            System.out.println("Employee Record File Saved!!");
            
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }//GEN-LAST:event_menuSaveFileActionPerformed

    /**
     * A method to add a record to the store
     * @param evt an action event when the add/edit record button is clicked
     */
    private void buttonAddRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddRecordActionPerformed
           
        employee = new Employee();
        
        /* Each component is checked to see if an entry has been made
         * If no entry has been made it is set to "Not Set" to remind the
         * user to set it needs to be
         */
        String name = txtName.getText();
        if (txtName.getText().isEmpty()) {
            name = "Not Set " + (workforce.getIndex()+1);
        }
        employee.setName(name);
        
        String gender = null;
        if (comboGender.getSelectedIndex() != 0) {
            gender = (String) comboGender.getSelectedItem();
        }
        employee.setGender(gender);
        
        int dobDay = 0;
        if (comboDobDay.getSelectedIndex() != 0) {
            String dobDayString = comboDobDay.getSelectedItem().toString();
            dobDay = Integer.parseInt(dobDayString);           
        }
        String dobMonth = null;
        if (comboDobMonth.getSelectedIndex() != 0) {
            dobMonth = (String) comboDobMonth.getSelectedItem();
        }
        int dobYear = 0;
        if (comboDobYear.getSelectedIndex() != 0) {
            String dobYearString = (String) comboDobYear.getSelectedItem();
            dobYear = Integer.parseInt(dobYearString);
        }
        Date dob = new Date(dobDay, dobMonth, dobYear);
        employee.setDob(dob);
        
        String salaryString = (String) txtSalary.getText();
        double salary = Double.parseDouble(salaryString);
        employee.setSalary(salary);
        
        String nin = txtNin.getText();
        if (txtNin.getText().isEmpty()) {
            nin = "Not Set";
        }
        employee.setNin(nin);
        
        String phone = txtPhone.getText();
        if (txtPhone.getText().isEmpty()) {
            phone = "Not Set";
        }
        employee.setPhone(phone);
        
        int startDay = 0;
        if (comboStartDay.getSelectedIndex() != 0) {
            String startDayString = (String) comboStartDay.getSelectedItem();
            startDay = Integer.parseInt(startDayString);           
        }
        String startMonth = null;
        if (comboStartMonth.getSelectedIndex() != 0) {
            startMonth = (String) comboStartMonth.getSelectedItem();
        }
        int startYear = 0;
        if (comboStartYear.getSelectedIndex() != 0) {
            String startYearString = (String) comboStartYear.getSelectedItem();
            startYear = Integer.parseInt(startYearString);
        }
        Date start = new Date(startDay, startMonth, startYear);
        employee.setStart(start);
        
        String title = txtJobTitle.getText();
        if (txtJobTitle.getText().isEmpty()) {
            title = "Not Set";
        }
        employee.setTitle(title);
        
        workforce.addEmployee(employee);
        
        txtName.setText("");
        comboGender.setSelectedIndex(0);
        comboDobDay.setSelectedIndex(0);
        comboDobMonth.setSelectedIndex(0);
        comboDobYear.setSelectedIndex(0);
        txtSalary.setText("0.0");
        txtNin.setText("");
        txtPhone.setText("");
        comboStartDay.setSelectedIndex(0);
        comboStartMonth.setSelectedIndex(0);
        comboStartYear.setSelectedIndex(0);
        txtJobTitle.setText("");
    }//GEN-LAST:event_buttonAddRecordActionPerformed

    /**
     * A method to load a file of records to the store
     * @param evt an action event when the load file option is clicked
     */
    private void menuLoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLoadFileActionPerformed
        
        workforce = new Store(20);
        
        int lines = 0;
        
        try {
            
            BufferedReader lineCount;
            lineCount = new BufferedReader(new FileReader("workforceFile.txt"));
            while (lineCount.readLine() != null) {
                lines++;
            }
            lineCount.close();

        } catch(FileNotFoundException e) {
            
            System.out.println(e.getMessage());
            
        } catch(IOException e) {
            
            System.out.println(e.getMessage());
        }
        
        
        BufferedReader br = null; 
        
        try { 
            
            br = new BufferedReader(new FileReader("workforceFile.txt"));
            
            /* Each component of the employee is extracted from the file
             * and added to an array of similiar components
            */
            String name[] = new String[lines];
            String gender[] = new String[lines];
            String dobString[] = new String[lines];
            String salaryString[] = new String[lines];
            String nin[] = new String[lines];
            String phone[] = new String[lines];
            String startString[] = new String[lines];
            String title[] = new String[lines];
            
            String lineSplit[];
            
            for(int i=0; i<lines; i++){
                String line = br.readLine();
                if(line != null) {
                    
                    lineSplit = line.split(",");
                    name[i] = lineSplit[0];
                    gender[i] = lineSplit[1];
                    dobString[i] = lineSplit[2];
                    phone[i] = lineSplit[3];
                    nin[i] = lineSplit[4];
                    salaryString[i] = lineSplit[5];
                    startString[i] = lineSplit[6];
                    title[i] = lineSplit[7];

                }
            }
            
            /* The arrays of components of iteratade over to reconstruct the
             * employees in the store correctly
             */
            for(int i=0; i<lines; i++){
                employee = new Employee();
                employee.setName(name[i]);
                employee.setGender(gender[i]);
                String[] dobParts = dobString[i].split("-", 3);
                int dobDay = Integer.parseInt(dobParts[0]);
                String dobMonth = dobParts[1];
                int dobYear = Integer.parseInt(dobParts[2]);
                Date dob = new Date(dobDay, dobMonth, dobYear);
                employee.setDob(dob);
                employee.setPhone(phone[i]);
                employee.setNin(nin[i]);
                double salary = Double.parseDouble(salaryString[i]);
                employee.setSalary(salary);
                String[] startParts = startString[i].split("-", 3);
                int startDay = Integer.parseInt(startParts[0]);
                String startMonth = startParts[1];
                int startYear = Integer.parseInt(startParts[2]);
                Date start = new Date(startDay, startMonth, startYear);
                employee.setStart(start);
                employee.setTitle(title[i]);

                workforce.addEmployee(employee);
            }

        } catch(FileNotFoundException e) {
            
            System.out.println(e.getMessage());
            
        } catch(IOException e) {
            
            System.out.println(e.getMessage());
            
        } finally {
            
            if(br != null) {
                
                try {
                    
                    br.close();
                    
                } catch (IOException ex) {
                    
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
    }//GEN-LAST:event_menuLoadFileActionPerformed

    /**
     * A method to delete a record from the store
     * @param evt an action event when the delete record button is clicked
     */
    private void menuDeleteRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteRecordActionPerformed
        String name = (String) txtName.getText();
        workforce.removeEmployee(name);
        txtName.setText("");
        comboGender.setSelectedIndex(0);
        comboDobDay.setSelectedIndex(0);
        comboDobMonth.setSelectedIndex(0);
        comboDobYear.setSelectedIndex(0);
        txtSalary.setText("0.0");
        txtNin.setText("");
        txtPhone.setText("");
        comboStartDay.setSelectedIndex(0);
        comboStartMonth.setSelectedIndex(0);
        comboStartYear.setSelectedIndex(0);
        txtJobTitle.setText("");
    }//GEN-LAST:event_menuDeleteRecordActionPerformed

    /**
     * A method to show the next record from the store
     * @param evt an action event when the next record option is clicked
     */
    private void menuNextRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNextRecordActionPerformed

        int currentPosition = workforce.currentRecordPosition(txtName.getText());
        int index = workforce.getIndex();

        /* The current record position is compared to the amount of records in
         * the array, if the current position is the last record in the array
         * the first record in the array is shown next
         */
        if (txtName.getText() == null) {
            employee = workforce.getEmployee(0);
        }else if (currentPosition == index-1) {
            employee = workforce.getEmployee(0);
        }else {
            employee = workforce.getEmployee(currentPosition+1);
        }

        if (employee.getName() != null) {
            txtName.setText(employee.getName());
        }

        comboGender.setSelectedIndex(0);
        if (employee.getGender() != null) {
            comboGender.setSelectedItem((Object) employee.getGender());
        }

        comboDobDay.setSelectedIndex(employee.getDob().getDay());
        if (employee.getDob().getMonth() != null) {
            comboDobMonth.setSelectedItem((Object) employee.getDob().getMonth());
        }else {
            comboDobMonth.setSelectedIndex(0);
        }
        if (employee.getDob().getYear() != 0) {
            comboDobYear.setSelectedIndex(-1*employee.getDob().getYear()+2003);
        }else {
            comboDobYear.setSelectedIndex(0);
        }

        txtSalary.setText(Double.toString(employee.getSalary()));

        txtNin.setText(employee.getNin());

        txtPhone.setText(employee.getPhone());

        comboStartDay.setSelectedIndex(employee.getStart().getDay());
        if (employee.getStart().getMonth() != null) {
            comboStartMonth.setSelectedItem((Object) employee.getStart().getMonth());
        }else {
            comboStartMonth.setSelectedIndex(0);
        }
        if (employee.getStart().getYear() != 0) {
            comboStartYear.setSelectedIndex(-1*employee.getStart().getYear()+2019);
        }else {
            comboStartYear.setSelectedIndex(0);
        }

        txtJobTitle.setText(employee.getTitle());        
    }//GEN-LAST:event_menuNextRecordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) { 
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI().setVisible(true);
        });
    }
        
    private Store workforce;
    private Employee employee;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddRecord;
    private javax.swing.JButton buttonClear;
    private javax.swing.JComboBox<String> comboDobDay;
    private javax.swing.JComboBox<String> comboDobMonth;
    private javax.swing.JComboBox<String> comboDobYear;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JComboBox<String> comboStartDay;
    private javax.swing.JComboBox<String> comboStartMonth;
    private javax.swing.JComboBox<String> comboStartYear;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblImage;
    private javax.swing.JMenuItem menuDeleteRecord;
    private javax.swing.JMenuItem menuLoadFile;
    private javax.swing.JMenuItem menuNextRecord;
    private javax.swing.JMenuItem menuSaveFile;
    private javax.swing.JTextField txtJobTitle;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNin;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables
}
